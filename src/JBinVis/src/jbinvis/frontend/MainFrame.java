/*
 *  
 */
package jbinvis.frontend;

import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import javax.swing.JFileChooser;
import jbinvis.main.FileUpdateListener;
import jbinvis.main.JBinVis;
import jbinvis.renderer.BinVisCanvas;
import jbinvis.visualisations.Bytemap;

/**
 *
 * @author Billy
 */
public class MainFrame extends javax.swing.JFrame implements FileUpdateListener, AdjustmentListener {

    private BinVisCanvas canvas = null;
    private final JBinVis jbinvis;
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        jbinvis = JBinVis.getInstance();
        jbinvis.addFileUpdateListener(this);
        
        canvas = BinVisCanvas.create(panelCanvas);
        canvas.setRenderLogic(new Bytemap());
        
        menuCloseFile.setEnabled(false);
        mainScrollBar.setEnabled(false);       
        
        mainScrollBar.addAdjustmentListener(this);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHeader = new javax.swing.JPanel();
        panelCanvas = new javax.swing.JPanel();
        panelFooter = new javax.swing.JPanel();
        mainScrollBar = new javax.swing.JScrollBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuOpenFile = new javax.swing.JMenuItem();
        menuCloseFile = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuClose = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(640, 640));
        setPreferredSize(new java.awt.Dimension(640, 640));
        setSize(new java.awt.Dimension(640, 640));

        panelHeader.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelHeader.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout panelHeaderLayout = new javax.swing.GroupLayout(panelHeader);
        panelHeader.setLayout(panelHeaderLayout);
        panelHeaderLayout.setHorizontalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );
        panelHeaderLayout.setVerticalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 69, Short.MAX_VALUE)
        );

        getContentPane().add(panelHeader, java.awt.BorderLayout.PAGE_START);

        panelCanvas.setBackground(new java.awt.Color(153, 153, 153));
        panelCanvas.setLayout(new java.awt.BorderLayout());

        panelFooter.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelFooter.setPreferredSize(new java.awt.Dimension(4, 80));

        javax.swing.GroupLayout panelFooterLayout = new javax.swing.GroupLayout(panelFooter);
        panelFooter.setLayout(panelFooterLayout);
        panelFooterLayout.setHorizontalGroup(
            panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );
        panelFooterLayout.setVerticalGroup(
            panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 76, Short.MAX_VALUE)
        );

        panelCanvas.add(panelFooter, java.awt.BorderLayout.PAGE_END);
        panelCanvas.add(mainScrollBar, java.awt.BorderLayout.LINE_END);

        getContentPane().add(panelCanvas, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        menuOpenFile.setText("Open File");
        menuOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpenFileActionPerformed(evt);
            }
        });
        jMenu1.add(menuOpenFile);

        menuCloseFile.setText("Close File");
        menuCloseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCloseFileActionPerformed(evt);
            }
        });
        jMenu1.add(menuCloseFile);
        jMenu1.add(jSeparator1);

        menuClose.setText("Exit");
        menuClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCloseActionPerformed(evt);
            }
        });
        jMenu1.add(menuClose);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_menuCloseActionPerformed

    private void menuOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpenFileActionPerformed
        // prompt user for file
        final JFileChooser fc = new JFileChooser();
        int retval = fc.showOpenDialog(this);
        
        if(retval == JFileChooser.APPROVE_OPTION) {
            jbinvis.loadFile(fc.getSelectedFile().getAbsolutePath());
            menuCloseFile.setEnabled(true);
        } 
    }//GEN-LAST:event_menuOpenFileActionPerformed

    private void menuCloseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCloseFileActionPerformed
        jbinvis.closeFile();
        menuCloseFile.setEnabled(false);
    }//GEN-LAST:event_menuCloseFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JScrollBar mainScrollBar;
    private javax.swing.JMenuItem menuClose;
    private javax.swing.JMenuItem menuCloseFile;
    private javax.swing.JMenuItem menuOpenFile;
    private javax.swing.JPanel panelCanvas;
    private javax.swing.JPanel panelFooter;
    private javax.swing.JPanel panelHeader;
    // End of variables declaration//GEN-END:variables

    @Override
    public void fileOffsetUpdated() {
    }

    @Override
    public void fileClosed() {
        mainScrollBar.setEnabled(false);
    }

    @Override
    public void fileOpened() {
        mainScrollBar.setEnabled(true);
    }

    @Override
    public void adjustmentValueChanged(AdjustmentEvent e) {
        if(e.getSource().equals(mainScrollBar)) {
            System.out.println(e.getValue());
        }
    }
}
